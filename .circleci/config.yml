version: 2
jobs:
  build:
    machine: true
    environment:
      DOCKER_LAYER_CACHE_NAME: "docker_cache"
    steps:
      - checkout
      - restore_cache:
          name: Restore docker image cache
          key: key-{{ checksum "Dockerfile" }}
      - run:
          name: Load docker image layer cache
          command: if [ -f .caches/${DOCKER_LAYER_CACHE_NAME}.tar.gz ]; then docker image import .caches/${DOCKER_LAYER_CACHE_NAME}.tar.gz; docker images; else echo "Image cache not found"; fi
      - run:
          name: Build application docker image
          command: docker build --tag ${DOCKER_LAYER_CACHE_NAME} .
      - run:
          name: Save docker image layer
          command: |
            mkdir -p .caches
            mkdir -p .tmp
            docker build --tag ${DOCKER_LAYER_CACHE_NAME} . | grep '\-\-\->' | grep -v 'Using cache' | sed -e 's/[ >-]//g' > .tmp/layers.txt
            docker save $(cat .tmp/layers.txt) -o .caches/${DOCKER_LAYER_CACHE_NAME}.tar.gz
      - save_cache:
          name: Save docker image cache
          key: key-{{ checksum "Dockerfile" }}
          paths:
            - .caches/

#    working_directory: ~/code
#    docker:
#      - image: circleci/android:api-28-alpha
#    resource_class: large
#    steps:
#      - checkout
#      - restore_cache:
#          key: supply-{{ checksum ".circleci/config.yml" }}
#      - save_cache:
#          paths:
#            - "~/.gradle"
#          key: supply-{{ checksum ".circleci/config.yml" }}
#      - run:
#          name: Run tests
#          command: echo "Test cases ran"
