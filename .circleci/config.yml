aliases:
  - &restore_gradle_cache
    restore_cache:
      name: Restoring gradle cache
      key: supply-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

  - &restore_robolectric_cache
    restore_cache:
      name: Restoring robolectric cache
      key: supply-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum "robolectric_hermetic_build_setup.gradle" }}

  - &restore_bundle_cache
    restore_cache:
      name: Restoring bundle cache
      key: bundle-{{ checksum "Gemfile.lock" }}

  - &environment
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    resource_class: large

version: 2
workflows:
  version: 2
  "Build Pipeline":
    jobs:
      - dependencies
      - lint:
          requires:
            - dependencies
      - tests:
          requires:
            - dependencies

jobs:
  dependencies:
    <<: *environment
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_robolectric_cache
      - *restore_bundle_cache
      - run:
          name: Bundle install
          command: echo "Done"
#      - save_cache:
#          name: Save bundle cache
#          paths:
#            - vendor/bundle
#          key: bundle-{{ checksum "Gemfile.lock" }}
#      - run:
#          name: Download dependencies
#          command: ./gradlew androidDependencies
#      - run:
#          name: Download robolectric dependencies
#          command: ./gradlew filesForHermeticBuild
#      - save_cache:
#          name: Save gradle cache
#          paths:
#            - "~/.gradle"
#            - "~/.gradle/caches/modules-2"
#            - "~/.m2"
#          key: supply-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
#      - save_cache:
#          name: Save robolectric cache
#          paths:
#            - "app/libs/robolectric_libs"
#            - "app/src/test/resources/robolectric_sdks"
#          key: supply-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum "robolectric_hermetic_build_setup.gradle" }}
#      - run:
#          name: Compile source
#          command: ./gradlew compileReleaseJavaWithJavac compileDebugJavaWithJavac compileReleaseKotlin compileDebugKotlin
#      - run:
#          name: Store dependency graph
#          command: bundle exec quality/danger/store_dependency_graph.rb
#      - persist_to_workspace:
#          root: .
#          paths:
#            - ./

  lint:
    <<: *environment
    steps:
      - attach_workspace:
          at: .
      - *restore_gradle_cache
      - run:
          name: Run checkStyle, pmd and lint
          command: echo "Done"
#      - persist_to_workspace:
#          root: .
#          paths:
#            - app/build/reports/lint

  tests:
    <<: *environment
    steps:
      - attach_workspace:
          at: .
      - *restore_gradle_cache
      - *restore_robolectric_cache
      - run:
          name: Run tests
          command: echo "Done"
#      - store_test_results:
#          path: app/build/reports/tests
#      - persist_to_workspace:
#          root: .
#          paths:
#            - app/build/reports/tests

  assemble_debug_apks:
    <<: *environment
    steps:
      - attach_workspace:
          at: .
      - *restore_gradle_cache
      - run:
          name: Assemble debug variants
          command: ./gradlew assembleDebug -Pminify=true
      - persist_to_workspace:
          root: .
          paths:
            - app/build/outputs/apk/debug

  assemble_release_apks:
    <<: *environment
    steps:
      - attach_workspace:
          at: .
      - *restore_gradle_cache
      - run:
          name: Assemble release variants
          command: ./gradlew assembleRelease -x lintVitalRelease -Pminify=true
      - persist_to_workspace:
          root: .
          paths:
            - app/build/outputs/apk/release

  deploy_debug_apks_to_crashlytics:
    <<: *environment
    steps:
      - attach_workspace:
          at: .
      - deploy:
          name: Upload debug variant to Crashlytics Beta
          command: |
            set +e # see https://circleci.com/docs/2.0/configuration-reference/#default-shell-options
            skip_release_grep=$(git log -1 | grep -i 'ci-skip-release')
            if [ "${CIRCLE_BRANCH}" == "develop" ] && [ ${#skip_release_grep} -eq 0 ]; then
              ./gradlew crashlyticsUploadDistributionDebug
            fi


  upload_app_metrics_manifest:
    <<: *environment
    steps:
      - attach_workspace:
          at: .
      - store_artifacts:
          name: Store merged AndroidManifest.xml
          path: app/build/intermediates/merged_manifests/release/AndroidManifest.xml
          destination: outputs/AndroidManifest.xml
      - run:
          name: Execute Danger
          command: bundle exec danger --dangerfile=quality/danger/Dangerfile --verbose
      - run:
          name: Upload app metrics
          command: |
            if [ ${CIRCLE_BRANCH} == master ]; then bundle exec quality/danger/upload_master_app_metrics.rb; fi



  upload_reports:
    <<: *environment
    steps:
      - attach_workspace:
          at: .
      - store_artifacts:
          name: Store reports
          path: app/build/reports
          destination: reports

  upload_apks:
    <<: *environment
    steps:
      - attach_workspace:
          at: .
      - store_artifacts:
          path: app/build/outputs
          destination: outputs
